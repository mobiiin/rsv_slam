<launch>
  <!-- <param name="use_sim_time" type="bool" value="True"/> -->
  <param name="approx_sync"  type="bool" value="false"/>
  <!-- <param name="approx_sync_max_interval" type="string" value="0.005"/>  -->
  <!-- <param name="ground_truth_frame_id" type="string" value="world"/> -->
  
  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmapviz" default="false" /> 

  <!-- TF FRAMES -->
  <node pkg="tf" type="static_transform_publisher" name="world_to_map" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /world /map 100" />
  <node pkg="tf" type="static_transform_publisher" name="link_base_body_to_camera_link" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /link_base_body /camera_link 100" />
    
  <!-- Running Realsense node -->
<!--   <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <arg name="align_depth"              value="true"/>

    </include> -->

<!-- Running RGBD image resizer node -->
  <!-- <node name="image_resizer" pkg="realsense_vslam" type="resizer.py" /> -->

  <!-- GDB debugging tool -->
  <arg name="gdb" default="false"/>
  <arg name="launch_prefix" default="gdb -ex run -args" if="$(arg gdb)"/>
  <arg name="launch_prefix" default="" unless="$(arg gdb)"/>

  <group ns="rtabmap">
  
    <!-- Odometry -->
    <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <remap from="rgb/image"           to="/dynamic_image"/>
      <remap from="depth/image"         to="/dynamic_masked_image_raw"/>
      <remap from="rgb/camera_info"     to="/sync_camera_info"/>

      <param name="Odom/Strategy" type="string" value="0"/>      <!-- 0=Frame-to-Map, 1=Frame-to-KeyFrame -->
      <param name="Odom/FillInfoData" type="string" value="$(arg rtabmapviz)"/>
      <param name="Odom/ResetCountdown" type="string" value="15"/> 

      <param name="frame_id" type="string" value="camera_link"/>
      <param name="queue_size" type="int" value="30"/>
      <param name="wait_for_transform" type="bool" value="true"/>
     
    </node>
    
    <!-- Visual SLAM -->
    <!-- args: "delete_db_on_start" and "udebug" -->

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
      <param name="subscribe_depth" type="bool" value="true"/>
     
      <param name="Rtabmap/StartNewMapOnLoopClosure" type="string" value="true"/>
      <param name="Kp/DetectorStrategy" type="string" value="0"/>
      <param name="RGBD/CreateOccupancyGrid" type="string" value="false"/>
      <param name="Rtabmap/CreateIntermediateNodes" type="string" value="true"/>

      <param name="frame_id" type="string" value="camera_link"/>
	
      <remap from="rgb/image" to="/dynamic_image"/>
      <remap from="depth/image" to="/masked_image_raw"/>
      <remap from="rgb/camera_info" to="/sync_camera_info"/>
      <!-- <remap from="odom" to="/link_base_body"/> -->
      <param name="queue_size" type="int" value="30"/>
    </node>
    
    <!-- Visualisation  -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_odom_info" type="bool" value="true"/>
      <param name="queue_size" type="int" value="30"/>
      
      <param name="frame_id" type="string" value="camera_link"/>
    
      <remap from="rgb/image" to="/dynamic_image"/>
      <remap from="depth/image" to="/masked_image_raw"/>
      <remap from="rgb/camera_info" to="/sync_camera_info"/>
    </node>
        
  </group>
  
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/config/rgbdslam_datasets.rviz"/>


  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb">

    <remap from="rgb/image"       to="/dynamic_image"/>
    <remap from="depth/image"     to="/masked_image_raw"/>
    <remap from="rgb/camera_info" to="/sync_camera_info"/>
    <remap from="cloud"           to="voxel_cloud" />
    
    <param name="queue_size" type="int" value="10"/>
    <param name="decimation" type="double" value="4"/>
  </node>

  <!-- Load the Arash 2.0 robot model -->

<!--   <param name="robot_description" command="$(find xacro)/xacro - -inorder '$(find arash2_description)/urdf/arash2.urdf.xacro'"/>
  <param name="use_gui" value="true"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/> -->

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find urdf_tutorial)/urdf.rviz" required="true"/> -->

</launch>